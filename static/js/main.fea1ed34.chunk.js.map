{"version":3,"sources":["reducer/AppReducer.js","context/GlobalContext.js","components/AddTransaction.js","components/Balance.js","context/ThemeContext.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/ExpenseTracker.js","components/Navigation.js","App.js","index.js"],"names":["AppReducer","state","action","type","filter","transaction","id","payload","text","amount","uuidv4","GlobalContext","createContext","GlobalContextProvider","props","useReducer","localData","localStorage","getItem","JSON","parse","transactions","dispatch","useEffect","setItem","stringify","Provider","value","deleteTransaction","addTransaction","children","AddTransaction","useContext","useState","setText","setAmount","onSubmit","e","preventDefault","className","htmlFor","placeholder","onChange","target","required","Balance","total","setTotal","map","reduce","acc","curr","toFixed","ThemeContext","ThemeContextProvider","isLightTheme","light","syntax","ui","bg","dark","theme","setTheme","toggleTheme","IncomeExpenses","income","setIncome","expense","setExpense","amounts","item","style","background","Transaction","sign","onClick","Math","abs","TransactionList","ExpenseTracker","color","Navigation","mode","setMode","Checkbox","toggle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fea1ed34.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\n\nconst AppReducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      return state.filter((transaction) => transaction.id !== action.payload);\n    case \"ADD_TRANSACTION\":\n      return [\n        ...state,\n        {\n          text: action.payload.text,\n          amount: action.payload.amount,\n          id: uuidv4(),\n        },\n      ];\n\n    default:\n      return state;\n  }\n};\n\nexport default AppReducer;\n","import React, { createContext, useEffect, useReducer } from \"react\";\nimport AppReducer from \"../reducer/AppReducer\";\n\n//Create context\nexport const GlobalContext = createContext();\n\n//Provider component\nconst GlobalContextProvider = (props) => {\n  const [transactions, dispatch] = useReducer(AppReducer, [], () => {\n    const localData = localStorage.getItem(\"transactions\");\n\n    return localData ? JSON.parse(localData) : [];\n  });\n\n  //Sets Item in local storage when transactions changes on render\n  useEffect(() => {\n    localStorage.setItem(\"transactions\", JSON.stringify(transactions));\n  }, [transactions]);\n\n  // Actions\n  const deleteTransaction = (id) => {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id,\n    });\n  };\n\n  const addTransaction = (transaction) => {\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: transaction,\n    });\n  };\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions,\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\n\nexport default GlobalContextProvider;\n","import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nfunction AddTransaction() {\n  const { addTransaction } = useContext(GlobalContext);\n\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    addTransaction({ text, amount: +amount });\n    setText(\"\");\n    setAmount(\"\");\n  };\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter text...\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            placeholder=\"Enter amount...\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            required\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  );\n}\n\nexport default AddTransaction;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nfunction Balance() {\n  const { transactions } = useContext(GlobalContext);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    setTotal(\n      transactions\n        .map((transaction) => transaction.amount)\n        .reduce((acc, curr) => (acc += curr), 0)\n        .toFixed(2)\n    );\n  }, [transactions]);\n  return (\n    <div className=\"balance\">\n      <h1>Your Balance</h1>\n      <h1 className=\"balance-total\">${total}</h1>\n    </div>\n  );\n}\n\nexport default Balance;\n","import React, { useState, createContext } from \"react\";\n\nexport const ThemeContext = createContext();\n\nfunction ThemeContextProvider(props) {\n  const [theme, setTheme] = useState({\n    isLightTheme: true,\n    light: {\n      syntax: \"#555\",\n      ui: \"#ddd\",\n      bg: \"#eee\",\n    },\n    dark: { syntax: \"#ddd\", ui: \"#333\", bg: \"#555\" },\n  });\n\n  //Toggle function that switches the isLightTheme boolean value\n  const toggleTheme = () => {\n    setTheme({ ...theme, isLightTheme: !theme.isLightTheme });\n  };\n\n  return (\n    <ThemeContext.Provider value={{ ...theme, toggleTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport default ThemeContextProvider;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport { ThemeContext } from \"../context/ThemeContext\";\n\nfunction IncomeExpenses() {\n  const { transactions } = useContext(GlobalContext);\n  const [income, setIncome] = useState(0);\n  const [expense, setExpense] = useState(0);\n  const { isLightTheme, dark, light } = useContext(ThemeContext);\n\n  const theme = isLightTheme ? light : dark;\n\n  useEffect(() => {\n    const amounts = transactions.map((transaction) => transaction.amount);\n    setIncome(\n      amounts\n        .filter((item) => item > 0)\n        .reduce((acc, curr) => (acc += curr), 0)\n        .toFixed(2)\n    );\n    setExpense(\n      amounts\n        .filter((item) => item <= 0)\n        .reduce((acc, curr) => (acc -= curr), 0)\n        .toFixed(2)\n    );\n  }, [transactions]);\n\n  return (\n    <div className=\"income-exp-container\" style={{ background: theme.ui }}>\n      <div>\n        <h4>Income</h4>\n        <p id=\"money-plus\" className=\"money\">\n          +${income}\n        </p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p id=\"money-minus\" className=\"money\">\n          -${expense}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default IncomeExpenses;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport { ThemeContext } from \"../context/ThemeContext\";\n\nfunction Transaction({ transaction }) {\n  const { deleteTransaction } = useContext(GlobalContext);\n  const { isLightTheme, dark, light } = useContext(ThemeContext);\n\n  const theme = isLightTheme ? light : dark;\n\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\n\n  return (\n    <div\n      style={{ background: theme.ui }}\n      className={`list-item ${transaction.amount < 0 ? \"minus\" : \"plus\"}`}\n    >\n      <button\n        onClick={() => deleteTransaction(transaction.id)}\n        className=\"delete-btn\"\n      >\n        x\n      </button>\n      <span className=\"transaction-text\">{transaction.text}</span>\n      <span className=\"transaction-amount\">{`${sign}$${Math.abs(\n        transaction.amount\n      )}`}</span>\n    </div>\n  );\n}\n\nexport default Transaction;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport Transaction from \"./Transaction\";\n\nfunction TransactionList() {\n  const { transactions } = useContext(GlobalContext);\n\n  return (\n    <>\n      <h3>History</h3>\n      <ul id=\"list\" className=\"list\">\n        {transactions.map((transaction) => (\n          <Transaction transaction={transaction} key={transaction.id} />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default TransactionList;\n","import React, { useContext } from \"react\";\nimport AddTransaction from \"./AddTransaction\";\nimport Balance from \"./Balance\";\nimport IncomeExpenses from \"./IncomeExpenses\";\nimport TransactionList from \"./TransactionList\";\nimport { ThemeContext } from \"../context/ThemeContext\";\n\nfunction ExpenseTracker() {\n  const { isLightTheme, dark, light } = useContext(ThemeContext);\n\n  const theme = isLightTheme ? light : dark;\n\n  return (\n    <div\n      className=\"expense-tracker-container\"\n      style={{ background: theme.bg, color: theme.syntax }}\n    >\n      <Balance />\n      <IncomeExpenses />\n      <TransactionList />\n      <AddTransaction />\n    </div>\n  );\n}\n\nexport default ExpenseTracker;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { ThemeContext } from \"../context/ThemeContext\";\nimport { Checkbox } from \"semantic-ui-react\";\n\nfunction Navigation() {\n  const [mode, setMode] = useState(\"\");\n  const { isLightTheme, toggleTheme } = useContext(ThemeContext);\n\n  useEffect(() => {\n    return isLightTheme ? setMode(\"Light\") : setMode(\"Dark\");\n  }, [isLightTheme]);\n\n  return (\n    <nav className=\"nav\">\n      <h1>Expense Tracker</h1>\n      <div className=\"nav-mode\">\n        <h1>{mode}</h1>\n        <Checkbox toggle onClick={toggleTheme} className=\"toggle-btn\" />\n      </div>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport ExpenseTracker from \"./components/ExpenseTracker\";\n\nimport Navigation from \"./components/Navigation\";\nimport GlobalContextProvider from \"./context/GlobalContext\";\nimport ThemeContextProvider from \"./context/ThemeContext\";\n\nfunction App() {\n  return (\n    <div>\n      <ThemeContextProvider>\n        <GlobalContextProvider>\n          <Navigation />\n          <ExpenseTracker />\n        </GlobalContextProvider>\n      </ThemeContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}